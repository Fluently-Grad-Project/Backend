"""add UserRating table

Revision ID: f21364bf9d16
Revises: c002c83037a9
Create Date: 2025-06-13 21:36:47.896615

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f21364bf9d16'
down_revision: Union[str, None] = 'c002c83037a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_ratings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rater_id', sa.Integer(), nullable=False),
    sa.Column('ratee_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['ratee_id'], ['user_data.id'], ),
    sa.ForeignKeyConstraint(['rater_id'], ['user_data.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rater_id', 'ratee_id', name='_unique_rater_ratee')
    )
    op.create_index(op.f('ix_user_ratings_id'), 'user_ratings', ['id'], unique=False)

    op.execute("UPDATE user_data SET is_locked = false WHERE is_locked IS NULL")
    op.execute("UPDATE user_manager SET rating = 0 WHERE rating IS NULL")
    
    op.alter_column('activity_tracker', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('activity_tracker', 'streaks',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('activity_tracker', 'number_of_hours',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chat_messages', 'sender_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chat_messages', 'receiver_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('chat_messages', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('friend_requests', 'sender_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('friend_requests', 'receiver_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('friend_requests', 'status',
               existing_type=postgresql.ENUM('PENDING', 'ACCEPTED', 'REJECTED', name='friendrequeststatus'),
               nullable=False)
    op.alter_column('friend_requests', 'sent_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('friendship', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('matchmaking', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('matchmaking', 'languages',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('matchmaking', 'practice_frequency',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('matchmaking', 'interests',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('matchmaking', 'proficiency_level',
               existing_type=postgresql.ENUM('BEGINNER', 'INTERMEDIATE', 'FLUENT', 'Intermediate', 'Beginner', 'Fluent', name='proficiencylevel'),
               nullable=False)
    op.alter_column('user_data', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user_data', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user_data', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user_data', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user_data', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_data', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('user_data', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_data', 'is_locked',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_manager', 'rating',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('user_refresh_tokens', 'is_used',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_refresh_tokens', 'is_revoked',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_refresh_tokens', 'added_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('user_refresh_tokens', 'expiry_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('verification_codes', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('verification_codes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('verification_codes', 'expiry_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('verification_codes', 'expiry_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('verification_codes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('verification_codes', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user_refresh_tokens', 'expiry_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('user_refresh_tokens', 'added_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('user_refresh_tokens', 'is_revoked',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_refresh_tokens', 'is_used',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_manager', 'rating',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('user_data', 'is_locked',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_data', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_data', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('user_data', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_data', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user_data', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user_data', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user_data', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('matchmaking', 'proficiency_level',
               existing_type=postgresql.ENUM('BEGINNER', 'INTERMEDIATE', 'FLUENT', 'Intermediate', 'Beginner', 'Fluent', name='proficiencylevel'),
               nullable=True)
    op.alter_column('matchmaking', 'interests',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('matchmaking', 'practice_frequency',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('matchmaking', 'languages',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.alter_column('matchmaking', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('friendship', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('friend_requests', 'sent_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('friend_requests', 'status',
               existing_type=postgresql.ENUM('PENDING', 'ACCEPTED', 'REJECTED', name='friendrequeststatus'),
               nullable=True)
    op.alter_column('friend_requests', 'receiver_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('friend_requests', 'sender_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chat_messages', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('chat_messages', 'receiver_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chat_messages', 'sender_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('activity_tracker', 'number_of_hours',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('activity_tracker', 'streaks',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('activity_tracker', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_user_ratings_id'), table_name='user_ratings')
    op.drop_table('user_ratings')
    # ### end Alembic commands ###
